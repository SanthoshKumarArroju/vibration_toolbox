%% Lab_4 Modal Analysis of a Cruise Missile Wing %
clc; close all; clear all;

%% To find Transfer Function for all five cases for mdofcf %

load Case1
h1=Hf_chan_2;
load Case2
h2=Hf_chan_2;
load Case3
h3=Hf_chan_2;
load Case4
h4=Hf_chan_2;
load Case5
h5=Hf_chan_2;
 
tf=[h1,h2,h3,h4,h5];

% use mdofcf.m in vibration tool box to find damping, natural frequency,
% mode shape vector

lamda=zeros(5); z=zeros(5); s=zeros(5);

f1 = 13.5; f2 = 51.7; f3 = 124.7; f4 = 167.38; f5 = 228.25;  % select the peak values from FRF plots for each case %

load Case1;
figure
H=20*log10(abs(Hf_chan_2)); % in db
% [pks, locs] = findpeaks(H);
% plot(Freq_domain, H, Freq_domain(locs),pks,'og')
plot(Freq_domain,H,'r'); hold on;
[z1,nf1,u1]=mdofcf(Freq_domain,tf,f1-5,f1+5);   % use -5,+5 lower and upper bounds to the peak value
z(1,1)=z1;
lamda(1,1)=(2*pi*nf1)^2;
s(:,1)=real(u1);

load Case2;
H=20*log10(abs(Hf_chan_2));
plot(Freq_domain,H, 'c'); hold on;
[z2,nf2,u2]=mdofcf(Freq_domain,tf,f2-5,f2+5);
z(2,2)=z2;
lamda(2,2)=(2*pi*nf2)^2;
s(:,2)=real(u2);

load Case3;
H=20*log10(abs(Hf_chan_2));
plot(Freq_domain,H, 'b'); hold on;
[z3,nf3,u3]=mdofcf(Freq_domain,tf,f3-5,f3+5);
z(3,3)=z3;
lamda(3,3)=(2*pi*nf3)^2;
s(:,3)=real(u3);

load Case4;
H=20*log10(abs(Hf_chan_2));
plot(Freq_domain,H, 'm'); hold on;
[z4,nf4,u4]=mdofcf(Freq_domain,tf,f4-5,f4+5);
z(4,4)=z4;
lamda(4,4)=(2*pi*nf4)^2;
s(:,4)=real(u4);

load Case5;
H=20*log10(abs(Hf_chan_2));
plot(Freq_domain,H, 'g'); grid on; xlabel('Frequency - Hz'); ylabel('FRF - db'); hold on;
title('FRF vs Frequency')
legend('Case 1','Case 2', 'Case 3','Case 4','Case 5')
[z5,nf5,u5]=mdofcf(Freq_domain,tf,f5-5,f5+5);
z(5,5)=z5;
lamda(5,5)=(2*pi*nf5)^2;
s(:,5)=real(u5);

m=(s'.*eye(5)).*s;              % Mass Matrix
c=(s'.*(2*z*sqrt(lamda))).*s;   % Damping Matrix
k=(s'.*lamda).*s;               % Stiffness Matrix

MM=vpa(m,8)  % use Variable Precision Arithmatic upto 5~8 %
DM=vpa(c,8)  % MM, DM, SM matices in the command window %
SM=vpa(k,8)

%% Hammer Acceleration response plots for all five cases
figure
load Case1;
Acc=9.81*Time_chan_1;
plot (Time_domain,Acc,'r');
hold on
load Case2;
Acc=9.81*Time_chan_1;
plot (Time_chan_1,Acc,'c')
hold on
load Case3;
Acce=9.81*Time_chan_1;
plot (Time_domain,Acce,'b')
hold on
load Case4;
Acc=9.81*Time_chan_1;
plot (Time_domain,Acc,'m')
hold on
load Case5;
Acc=9.81*Time_chan_1;
plot (Time_domain,Acc,'g')
% axis([0,0.25,-1,1])
xlabel('Time - sec)'); ylabel('Acceleration - m/sec^2)');
legend('Case 1','Case 2', 'Case 3','Case 4','Case 5')
title('Hammer Input Acceleration vs Time'); grid on;

%% Magnitude and Phase plots using sdofcf %
figure
load Case1
[zeta,F,~]=sdofcf(Freq_domain,Hf_chan_2,0,100);
hold on
load Case2
[zeta,F,~]=sdofcf(Freq_domain,Hf_chan_2,0,100);
hold on
load Case3
[zeta,F,~]=sdofcf(Freq_domain,Hf_chan_2,0,100);
hold on
load Case4
[zeta,F,~]=sdofcf(Freq_domain,Hf_chan_2,0,100);
hold on
load Case5
[zeta,F,~]=sdofcf(Freq_domain,Hf_chan_2,0,100);


%% Inertance FRF for all cases % 
figure
load Case1;
H=20*log10(abs(Hf_chan_2));
plot(Freq_domain,H); grid on; hold on
load Case2;
H=20*log10(abs(Hf_chan_2));
plot(Freq_domain,H); grid on; hold on
load Case3;
H=20*log10(abs(Hf_chan_2));
plot(Freq_domain,H); grid on; hold on
load Case4;
H=20*log10(abs(Hf_chan_2));
plot(Freq_domain,H); grid on; hold on
load Case5;
H=20*log10(abs(Hf_chan_2));
plot(Freq_domain,H); grid on; hold on
xlabel('Frequency - Hz'); ylabel('FRF - dB');
title('Inertance FRF vs Frequency');
 


%% To find Power Spectral Density for all five cases

figure
load Case1
PSD_dB=20*log10(abs(PSD_chan_1));
plot(Freq_domain,PSD_dB,'r'); hold on
load Case2
PSD_dB=20*log10(abs(PSD_chan_1));
plot(Freq_domain,PSD_dB,'c'); hold on
load Case3
PSD_dB=20*log10(abs(PSD_chan_1));
plot(Freq_domain,PSD_dB,'b'); hold on
load Case4
PSD_dB=20*log10(abs(PSD_chan_1));
plot(Freq_domain,PSD_dB,'m'); hold on
load Case5
PSD_dB=20*log10(abs(PSD_chan_1));
plot(Freq_domain,PSD_dB,'g'); hold on
xlabel('Frequency - Hz'); ylabel('Power spectral density - dB');
legend('Case 1','Case 2', 'Case 3','Case 4','Case 5')
title('Input Hammer PSD vs Frequency'); grid on;
axis([-50 600 -110 0])


